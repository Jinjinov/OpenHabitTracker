@using OpenHabitTracker.App
@using OpenHabitTracker.Data.Models
@using OpenHabitTracker.Services

@inject CategoryService CategoryService
@inject ClientState ClientState
@inject IStringLocalizer Loc

@if (CategoryService.Categories is not null && Model is not null)
{
    <InputSelect class="form-select" Value="Model.CategoryId" ValueExpression="() => Model.CategoryId" TValue="long" ValueChanged="SaveCategory">
        <option value="0" disabled selected hidden>@Loc["None"]</option>
        @foreach (CategoryModel category in CategoryService.Categories)
        {
            <option @key="category.Id" value="@category.Id">@category.Title</option>
        }
    </InputSelect>
}

@code {
    [EditorRequired]
    [Parameter]
    public ContentModel? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.Initialize();
    }

    async Task SaveCategory(long categoryId)
    {
        if (Model is null)
            return;

        Model.CategoryId = categoryId;

        await ClientState.UpdateModel(Model);
    }
}
